package aesgo

import (
	"fmt"
	"testing"

	"github.com/mario-areias/aes-go/key"
)

func TestEncryptBlock(t *testing.T) {
	// This test is extracted from the FIPS 197 document
	// https://csrc.nist.gov/files/pubs/fips/197/final/docs/fips-197.pdf
	// Appendix B - Cipher Example
	// Appendix C.1 AES-128 Encryption

	tests := []struct {
		name string

		input    [16]byte
		material [16]byte

		expected [4][4]byte
	}{
		{
			name: "Appendix B",

			input:    [16]byte{0x32, 0x43, 0xf6, 0xa8, 0x88, 0x5a, 0x30, 0x8d, 0x31, 0x31, 0x98, 0xa2, 0xe0, 0x37, 0x07, 0x34},
			material: [16]byte{0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c},

			expected: [4][4]byte{
				{0x39, 0x02, 0xdc, 0x19},
				{0x25, 0xdc, 0x11, 0x6a},
				{0x84, 0x09, 0x85, 0x0b},
				{0x1d, 0xfb, 0x97, 0x32},
			},
		},
		{

			name:     "Appendix C.1",
			input:    [16]byte{0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff},
			material: [16]byte{0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f},

			// 69c4e0d8 6a7b0430 d8cdb780 70b4c55a
			expected: [4][4]byte{
				{0x69, 0x6a, 0xd8, 0x70},
				{0xc4, 0x7b, 0xcd, 0xb4},
				{0xe0, 0x04, 0xb7, 0xc5},
				{0xd8, 0x30, 0x80, 0x5a},
			},
		},
	}

	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {

			key := key.NewKey(test.material)
			aes := NewAES(key)

			output := aes.EncryptBlock(test.input)

			if output != test.expected {
				fmt.Printf("Got: %02x\n", output)
				fmt.Printf("Expected: %02x\n", test.expected)

				t.Fail()
			}
		})
	}

}
